# -*- coding: utf-8 -*-
"""brain_tumor

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zPY-y4IQv8hNBaQwH0_RG0RwTUSBxvlq
"""

import pandas as pd



from google.colab import drive
drive.mount('/content/drive')

from tensorflow.compat.v1 import ConfigProto
from tensorflow.compat.v1 import InteractiveSession

config = ConfigProto()
config.gpu_options.per_process_gpu_memory_fraction = 0.5
config.gpu_options.allow_growth = True
session = InteractiveSession(config=config)

# import the libraries as shown below

from tensorflow.keras.layers import Input, Lambda, Dense, Flatten
from tensorflow.keras.models import Model
from tensorflow.keras.applications.resnet50 import ResNet50
from keras.applications.vgg16 import VGG16
from tensorflow.keras.applications.resnet50 import preprocess_input
from tensorflow.keras.preprocessing import image
from tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img
from tensorflow.keras.models import Sequential
import numpy as np
from glob import glob
#import matplotlib.pyplot as plt

image_size=[224,224]

train_path=['/content/drive/MyDrive/cv_activity_brain_trumor']

vgg16=VGG16(input_shape=image_size+[3],weights='imagenet',include_top=False )

# don't train existing weights means freezing the weights
for layer in vgg16.layers:
    layer.trainable = False

folder=glob('/content/drive/MyDrive/cv_activity_brain_trumor/*')

x=Flatten()(vgg16.output)

x

prediction=Dense(len(folder),activation='softmax')(x)

prediction

model=Model(inputs=vgg16.input,outputs=prediction)

model.summary()

model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

from tensorflow.keras.preprocessing.image import ImageDataGenerator
#to imoprt the images from the dataset

train_data=ImageDataGenerator(rescale=1./255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)


#for test data we dont do these all
test_data=ImageDataGenerator(rescale=1./255)

train_set=train_data.flow_from_directory('/content/drive/MyDrive/cv_activity_brain_trumor',target_size=(224,224),batch_size=16,class_mode='categorical')

#test
test_set=train_data.flow_from_directory('/content/drive/MyDrive/cv_activity_brain_trumor/No',target_size=(224,224),batch_size=16,class_mode='categorical')

r=model.fit_generator(train_set,epochs=10,steps_per_epoch=len(train_set))

# save it as a h5 file


from tensorflow.keras.models import load_model

model.save('model_vgg16.h5')

